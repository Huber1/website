---
interface Props {
    content: string;
    type: "INFO" | "WARNING" | "ERROR";
}
const {content, type = "INFO"} = Astro.props;
const getBgColor = () => {
    switch (type) {
        case "INFO":
            return "#E0EBFD";
        case "WARNING":
            return "#FEFAE8";
        case "ERROR":
            return "#FCECE7";
    }
};
const backgroundColor = getBgColor();
---
<div class="info">
    {type == "INFO" &&
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="#2050C4">
                <path fill="none" d="M0 0h24v24H0V0z"/>
                <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 15c-.55 0-1-.45-1-1v-4c0-.55.45-1 1-1s1 .45 1 1v4c0 .55-.45 1-1 1zm1-8h-2V7h2v2z"/>
            </svg>}
    {type == "WARNING" &&
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="#F19E41">
                <path d="M4.47 21h15.06c1.54 0 2.5-1.67 1.73-3L13.73 4.99c-.77-1.33-2.69-1.33-3.46 0L2.74 18c-.77 1.33.19 3 1.73 3zM12 14c-.55 0-1-.45-1-1v-2c0-.55.45-1 1-1s1 .45 1 1v2c0 .55-.45 1-1 1zm1 4h-2v-2h2v2z"/>
            </svg>}
    {type == "ERROR" &&
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="#CC4525">
                <path fill="none" d="M0 0h24v24H0V0z"/>
                <path d="M15.32 3H8.68c-.26 0-.52.11-.7.29L3.29 7.98c-.18.18-.29.44-.29.7v6.63c0 .27.11.52.29.71l4.68 4.68c.19.19.45.3.71.3h6.63c.27 0 .52-.11.71-.29l4.68-4.68a.99.99 0 0 0 .29-.71V8.68c0-.27-.11-.52-.29-.71l-4.68-4.68c-.18-.18-.44-.29-.7-.29zM12 17.3c-.72 0-1.3-.58-1.3-1.3s.58-1.3 1.3-1.3 1.3.58 1.3 1.3-.58 1.3-1.3 1.3zm0-4.3c-.55 0-1-.45-1-1V8c0-.55.45-1 1-1s1 .45 1 1v4c0 .55-.45 1-1 1z"/>
            </svg>}
    <span><slot /></span>
</div>
<style define:vars={{backgroundColor}}>
    .info {
        background-color: var(--backgroundColor);
        display: flex;
        gap: 0.5rem;
        padding: 0.5rem;
        align-items: center;
        border-radius: 4px;
    }
</style>